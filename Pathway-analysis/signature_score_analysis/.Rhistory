strip.text = element_text(color="black",family = "Arial",size = 26),
# axis.line = element_line(color="black"),
axis.line.x = element_blank(),
axis.line.y = element_line(color="black"),
legend.title = element_text( color="black",family = "Arial", size=22),
legend.text= element_text( color="black",family = "Arial", size=22),
plot.title = element_text(hjust = 0.5,size=36,face="bold"),
axis.text.x = element_text(face="bold",color="black",family = "Arial",size = 18),
axis.ticks.x = element_blank(),
axis.text.y = element_text(face="bold",  color="black", size=15),
axis.title.x = element_blank(),
axis.title.y = element_text(face="bold",color="black", size=24))
}
sign_score%>%ggplot(aes(x=group,y=sign_score,color=group))+
geom_boxplot(width=0.5,alpha = 1, lwd=1.2,size = 1,outlier.size=0,outlier.alpha = 0,fill="white")+
geom_point(aes(color = group),size = 1, position = position_jitterdodge(dodge.width=0.1,jitter.width = 1))+
scale_color_manual(values = c("dodgerblue","hotpink"))+
labs(y="Signature score")+
stat_compare_means(comparisons = c("T1","T2"),
method = "wilcox.test",
size=5,
label = "p.signif")+
scale_x_discrete(labels=c("CTRL","MRD"))+
theme_bw()+
theme(#legend.position="right",
legend.position="none",
panel.grid=element_blank(),
panel.border=element_blank(),
# axis.line = element_line(size=1, colour = "black"),
strip.background = element_blank(),
strip.text = element_text(color="black",family = "Arial",size = 26),
# axis.line = element_line(color="black"),
axis.line.x = element_blank(),
axis.line.y = element_line(color="black"),
legend.title = element_text( color="black",family = "Arial", size=22),
legend.text= element_text( color="black",family = "Arial", size=22),
plot.title = element_text(hjust = 0.5,size=36,face="bold"),
axis.text.x = element_text(face="bold",color="black",family = "Arial",size = 18),
axis.ticks.x = element_blank(),
axis.text.y = element_text(face="bold",  color="black", size=15),
axis.title.x = element_blank(),
axis.title.y = element_text(face="bold",color="black", size=24))
sign_score%>%ggplot(aes(x=group,y=sign_score,color=group))+
geom_boxplot(width=0.5,alpha = 1, lwd=1.2,size = 1,outlier.size=0,outlier.alpha = 0,fill="white")+
geom_point(aes(color = group),size = 1, position = position_jitterdodge(dodge.width=0.1,jitter.width = 1))+
scale_color_manual(values = c("dodgerblue","hotpink"))+
labs(y="Signature score")
library(ggsci)
scale_color_lancet()
sign_score%>%ggplot(aes(x=group,y=sign_score,color=group))+
geom_boxplot(width=0.5,alpha = 1, lwd=1.2,size = 1,outlier.size=0,outlier.alpha = 0,fill="white")+
geom_point(aes(color = group),size = 1, position = position_jitterdodge(dodge.width=0.1,jitter.width = 1))+
scale_color_lancet()+
labs(y="Signature score")
View(sign_score)
View(expression)
View(gene_matrix)
View(gene_matrix)
sign_score%>%ggplot(aes(x=group,y=sign_score,color=group))+
geom_boxplot(width=0.5,alpha = 1, lwd=1.2,size = 1,outlier.size=0,outlier.alpha = 0,fill="white")+
geom_point(aes(color = group),size = 1, position = position_jitterdodge(dodge.width=0.1,jitter.width = 1))
sign_score%>%ggplot(aes(x=group,y=sign_score,color=group))+
geom_boxplot(width=0.5,alpha = 1, lwd=1.2,size = 1,outlier.size=0,outlier.alpha = 0,fill="white")+
#geom_point(aes(color = group),size = 1, position = position_jitterdodge(dodge.width=0.1,jitter.width = 1))
#scale_color_lancet()+
#labs(y="Signature score")
}
sign_score%>%ggplot(aes(x=group,y=sign_score,color=group))+
geom_boxplot(width=0.5,alpha = 1, lwd=1.2,size = 1,outlier.size=0,outlier.alpha = 0)
sign_score%>%ggplot(aes(x=group,y=sign_score,color=group))+
geom_boxplot(width=0.5,alpha = 1, lwd=1.2,size = 1,outlier.size=0,outlier.alpha = 0,fill="white")
sign_score%>%ggplot(aes(x=group,y=sign_score,color=group))+
geom_boxplot(width=0.5,alpha = 1, lwd=1.2,size = 1,outlier.size=0,outlier.alpha = 0,fill="white")
sign_score%>%ggplot(aes(x=group,y=sign_score,color=group))+
geom_boxplot(width=0.5,alpha = 1, lwd=1.2,size = 1,outlier.size=0,outlier.alpha = 0,fill="white")
sign_score%>%ggplot(aes(x=group,y=sign_score,color=group))+
geom_boxplot(width=0.5,alpha = 1, lwd=1.2,size = 1,outlier.size=0,outlier.alpha = 0,fill="white")
sign_score%>%ggplot(aes(x=group,y=sign_score,color=group))+
geom_boxplot(width=0.5,alpha = 1, lwd=1.2,size = 1,outlier.size=0,outlier.alpha = 0,fill="white")+
geom_point(aes(color = group),size = 1, position = position_jitterdodge(dodge.width=0.1,jitter.width = 1))+
scale_color_lancet()+
labs(y="Signature score")
sign_score%>%ggplot(aes(x=group,y=sign_score,color=group))+
geom_boxplot(width=0.5,alpha = 1, lwd=1.2,size = 1,outlier.size=0,outlier.alpha = 0,fill="white")
sign_score%>%ggplot(aes(x=group,y=sign_score,color=group))+
geom_boxplot(width=0.5,alpha = 1, lwd=1.2,size = 1,outlier.size=0,outlier.alpha = 0,fill="white")+
geom_point(aes(color = group),size = 1, position = position_jitterdodge(dodge.width=0.1,jitter.width = 1))
sign_score%>%ggplot(aes(x=group,y=sign_score,color=group))+
geom_boxplot(width=0.5,alpha = 1, lwd=1.2,size = 1,outlier.size=0,outlier.alpha = 0)+
geom_point(aes(color = group),size = 1, position = position_jitterdodge(dodge.width=0.1,jitter.width = 1))
gene_matrix<-expression
gene_matrix<-expression
geneList<-sign_gene
# 1) convert raw counts to tpm
gene_matrix<-count2tpm(gene_matrix,gene_efflen)
# 2)将ENSEMBL ID转换为SYMBOL
gene_matrix<-ENSEMBL2SYMBOL(gene_matrix,"org.Hs.eg.db")
# 3) 合并具有相同SYMBOL名的行，将其TPM相加
unique_gene_matrix<-gene_matrix%>%group_by(SYMBOL)%>%summarise(across(everything(),sum))
# 4) 根据sample_info选择需要分析的列
gene_expression<-unique_gene_matrix[,intersect(names(unique_gene_matrix),c("SYMBOL",sample_info$sample)),drop=FALSE]
# 5) 对每一行做zscore标准化处理
gene_expression[,-1]<-t(scale(t(gene_expression[,-1])))
View(gene_expression)
# 4) 根据sample_info选择需要分析的列
gene_expression<-unique_gene_matrix[,intersect(names(unique_gene_matrix),c("SYMBOL",sample_info$sample)),drop=FALSE]
View(gene_expression)
# 5) 对每一行做zscore标准化处理
gene_expression[,-1]<-t(scale(t(gene_expression[,-1])))
# 5) 根据geneList选择出相关的基因
# 如果geneList 的列数超过1，则暗示其中包含有Weight列，需要额外处理
gene_expression<-gene_expression%>%inner_join(geneList,by="SYMBOL")
View(gene_expression)
if(length(geneList)>1){
gene_expression%>%dplyr::select(SYMBOL,Weight,everything())
# 如果geneList超过1,则将其表达值乘上Weight
gene_expression[,-c(1,2)]<-gene_expression[,-c(1,2)]*gene_expression$Weight
gene_expression<-gene_expression%>%dplyr::select(-Weight)
}
View(gene_expression)
gene_matrix_preprocessing<-function(gene_matrix,geneList,sample_info,gene_efflen){
# 1) convert raw counts to tpm
gene_matrix<-count2tpm(gene_matrix,gene_efflen)
# 2)将ENSEMBL ID转换为SYMBOL
gene_matrix<-ENSEMBL2SYMBOL(gene_matrix,"org.Hs.eg.db")
# 3) 合并具有相同SYMBOL名的行，将其TPM相加
unique_gene_matrix<-gene_matrix%>%group_by(SYMBOL)%>%summarise(across(everything(),sum))
# 4) 根据sample_info选择需要分析的列
gene_expression<-unique_gene_matrix[,intersect(names(unique_gene_matrix),c("SYMBOL",sample_info$sample)),drop=FALSE]
# 5) 对每一行做zscore标准化处理
gene_expression[,-1]<-t(scale(t(gene_expression[,-1])))
# 5) 根据geneList选择出相关的基因
# 如果geneList 的列数超过1，则暗示其中包含有Weight列，需要额外处理
gene_expression<-gene_expression%>%inner_join(geneList,by="SYMBOL")
if(length(geneList)>1){
gene_expression%>%dplyr::select(SYMBOL,Weight,everything())
# 如果geneList超过1,则将其表达值乘上Weight
gene_expression[,-c(1,2)]<-gene_expression[,-c(1,2)]*gene_expression$Weight
gene_expression<-gene_expression%>%dplyr::select(-Weight)
}
return(gene_expression)
}
# 读取有效基因长度矩阵，用于计算TPM
gene_efflen<-read.csv("gene_efflen.csv")
gene_expression<-gene_matrix_preprocessing(expression,sign_gene,sample_info,gene_efflen)
##### Signature score analysis for given gene sets.
gene_matrix<-gene_expression
signature_score<-function(gene_matrix,sample_info){
gene_matrix<-t(gene_matrix)
colnames(gene_matrix)<-gene_martix[1,]
gene_matrix<-as.data.frame(gene_matrix[-1,])
gene_matrix<-gene_matrix%>%mutate_all(as.numeric)
gene_matrix$Means<-rowMeans(gene_matrix)
gene_matrix$sample<-rownames(gene_matrix)
gene_matrix<-gene_matrix%>%inner_join(sample_info,by="sample")
sign_score<-gene_matrix%>%dplyr::select(sample,group,sign_score=Means)
return(sign_score)
}
sign_score<-signature_score(gene_expression,sample_info)
library(ggsci)
sign_score%>%ggplot(aes(x=group,y=sign_score,color=group))+
geom_boxplot(width=0.5,alpha = 1, lwd=1.2,size = 1,outlier.size=0,outlier.alpha = 0)+
geom_point(aes(color = group),size = 1, position = position_jitterdodge(dodge.width=0.1,jitter.width = 1))
expression2 <- read.table("GSE116237_scRNAseq_expressionMatrix.txt",
header = TRUE,sep = ",")
View(expression2)
sample_info2<-as.data.frame(sample=colnames(expression2))
sample_info2<-data.frame(sample=colnames(expression2))
View(sample_info2)
View(expression2)
View(expression)
View(expression)
View(expression2)
expression2<-expression2%>%dplyr::select(ENSEMBL=X)
sample_info2<-data.frame(sample=colnames(expression2)[-1])
sample_info2<-data.frame(sample=colnames(expression2))
expression2<-expression2%>%dplyr::select(ENSEMBL=X)
expression2 <- read.table("GSE116237_scRNAseq_expressionMatrix.txt",
header = TRUE,sep = ",")
expression2<-expression2%>%dplyr::select(ENSEMBL=X,everything())
sample_info2<-data.frame(sample=colnames(expression2)[-1])
View(sample_info2)
sample_info2$group<-sapply(strsplit(sample_info2$sample,"_"),function(x) x[1])
View(sample_info2)
sample_info2<-sample_info2%>%filter(group=="T0"|group=="T28")
View(sample_info2)
# 输入一个基因表达矩阵,其中基因ENSEMBL ID列的列名为ENSEMBL
# 输出一个基因表达矩阵,其中包含转换后的SYMBOL列信息，并且将具有相同SYMBOL的行整合
ENSEMBL2SYMBOL<-function(gene_matrix,OrgDb = "org.Hs.eg.db"){
gene_SYMBOL<-bitr(gene_matrix$ENSEMBL, fromType = 'ENSEMBL',toType = 'SYMBOL',OrgDb = "org.Hs.eg.db")
df<-gene_matrix%>%inner_join(gene_SYMBOL,by="ENSEMBL")
df<-df%>%dplyr::select(SYMBOL,everything(),-ENSEMBL)
return(df)
}
gene_matrix_preprocessing<-function(gene_matrix,geneList,sample_info,gene_efflen){
# 1) convert raw counts to tpm
gene_matrix<-count2tpm(gene_matrix,gene_efflen)
# 2)将ENSEMBL ID转换为SYMBOL
gene_matrix<-ENSEMBL2SYMBOL(gene_matrix,"org.Hs.eg.db")
# 3) 合并具有相同SYMBOL名的行，将其TPM相加
unique_gene_matrix<-gene_matrix%>%group_by(SYMBOL)%>%summarise(across(everything(),sum))
# 4) 根据sample_info选择需要分析的列
gene_expression<-unique_gene_matrix[,intersect(names(unique_gene_matrix),c("SYMBOL",sample_info$sample)),drop=FALSE]
# 5) 对每一行做zscore标准化处理
gene_expression[,-1]<-t(scale(t(gene_expression[,-1])))
# 5) 根据geneList选择出相关的基因
# 如果geneList 的列数超过1，则暗示其中包含有Weight列，需要额外处理
gene_expression<-gene_expression%>%inner_join(geneList,by="SYMBOL")
if(length(geneList)>1){
gene_expression%>%dplyr::select(SYMBOL,Weight,everything())
# 如果geneList超过1,则将其表达值乘上Weight
gene_expression[,-c(1,2)]<-gene_expression[,-c(1,2)]*gene_expression$Weight
gene_expression<-gene_expression%>%dplyr::select(-Weight)
}
return(gene_expression)
}
# 读取有效基因长度矩阵，用于计算TPM
gene_efflen<-read.csv("gene_efflen.csv")
gene_expression2<-gene_matrix_preprocessing(expression2,sign_gene,sample_info2,gene_efflen,)
gene_expression2<-gene_matrix_preprocessing(expression2,sign_gene,sample_info2,gene_efflen)
View(expression2)
View(gene_expression2)
sign_score2<-signature_score(gene_expression2,sample_info)
sign_score2<-signature_score(gene_expression2,sample_info2)
gene_expression2
sign_score2<-signature_score(gene_expression2,sample_info2)
View(expression)
View(gene_expression2)
##### Signature score analysis for given gene sets.
gene_matrix<-gene_expression2
sample_info<-sample_info2
gene_matrix<-t(gene_matrix)
colnames(gene_matrix)<-gene_martix[1,]
gene_martix[1,]
colnames(gene_matrix)
View(gene_matrix)
colnames(gene_matrix)<-gene_martix[1,]
gene_martix[1,]
colnames(gene_matrix)<-list(gene_martix[1,])
columns_names<-gene_martix[1,]
colnames(gene_matrix)<-columns_names
colnames(gene_matrix)<
as_data_frame(\)
colnames(gene_matrix)
gene_matrix
gene_matrix<-as.data.frame(gene_matrix)
View(geneList)
View(gene_matrix)
colnames(gene_matrix)<-gene_martix[1,]
View(gene_matrix)
gene_martix[1,]
View(gene_matrix)
colnames(gene_matrix)<-gene_matrix[1,]
signature_score<-function(gene_matrix,sample_info){
gene_matrix<-t(gene_matrix)
colnames(gene_matrix)<-gene_matrix[1,]
gene_matrix<-as.data.frame(gene_matrix[-1,])
gene_matrix<-gene_matrix%>%mutate_all(as.numeric)
gene_matrix$Means<-rowMeans(gene_matrix)
gene_matrix$sample<-rownames(gene_matrix)
gene_matrix<-gene_matrix%>%inner_join(sample_info,by="sample")
sign_score<-gene_matrix%>%dplyr::select(sample,group,sign_score=Means)
return(sign_score)
}
sign_score2<-signature_score(gene_expression2,sample_info2)
View(sign_score2)
sign_score2%>%ggplot(aes(x=group,y=sign_score,color=group))+
geom_boxplot(width=0.5,alpha = 1, lwd=1.2,size = 1,outlier.size=0,outlier.alpha = 0)+
geom_point(aes(color = group),size = 1, position = position_jitterdodge(dodge.width=0.1,jitter.width = 1))
View(geneList)
View(geneList)
View(geneList)
View(sample_info)
View(sample_info)
View(gene_expression2)
source('Script/signature_score_function_repo.R')
# 调用自定义函数库
rm(list=ls())
source('count2TPM.R')
source('Script/signature_score_function_repo.R')
##### Read expression matrix and signature gene list.
##### Then, carry out data preprocessing
setwd("~/Desktop/DTP/signature_score_analysis/")
## 1) Data loading section.
# 1.1) gene expression matrix
expression<-read.table("Script/count.all.txt",header = TRUE)
## 1) Data loading section.
# 1.1) gene expression matrix
expression<-read.table("Data/count.all.txt",header = TRUE)
expression<-expression%>%dplyr::select(ENSEMBL=gene_id,everything())
# 1.2) To establish a general "embryonic pausing signature",
# First measured DE in each embryonic model independently
# Gene sigificantly dysregulated in both models were selected for the signature
# Other Gene signatures such as mTORC1 response were obtained from the MSigDB "Hallmark gene sets"
sign_gene<-read.xlsx("Data/Embryonic-Pausing-Signature.xlsx",sheet = 1)
sign_gene<-sign_gene%>%dplyr::select(SYMBOL=Gene,everything())
# 1.3) create a sample imformation matrix
Untreated=c("A2403","A2425","A2360","A2353")
# Phase1  "A2428"样本存在问题，因此先将其移除
Phase1=c("A2405","A2400","A2376")
Phase2=c("A2419","A2375","A2421","A2420")
#Phase3=c("A2340","A2347","A2396")
Phase4=c("A2333","A2335","A2388","A2377","A2392")
Phase5=c("A2386","A2387","A2346","A2397")
sample_info<-data.frame(sample=c(Untreated, Phase1, Phase2, Phase4, Phase5),
group = factor(c(rep("T1", length(Untreated)),
rep("T2", length(Phase1)),
rep("T3", length(Phase2)),
rep("T5", length(Phase4)),
rep("T6", length(Phase5)))))
# 1.4) Read the matrix of effective gene lengths for calculating TPM
gene_efflen<-read.csv("gene_efflen.csv")
## 2) Data processing section.
# 2.1) perform data processing on gene expression matrix.
gene_expression<-gene_matrix_preprocessing(expression,sign_gene,sample_info,gene_efflen)
# 2.2) calculation signature score.
sign_score<-signature_score(gene_expression,sample_info)
sign_score
View(sign_score)
sign_score%>%ggplot(aes(group,y=sign_score,color=group))+
geom_point(aes(color =group),size=1,position = position_jitterdodge(dodge.width=0.1,jitter.width = 1))
View(sign_gene)
View(sign_score)
View(sign_score)
# 2.3) plot signature boxplot
plot_data<-sign_score%>%group_by(group)%>%summarize(mean_score=mean(sign_score),sd_score=sd(sign_score),se_score=sd(y)/sqrt(length(y)))
View(sign_score)
# 2.3) plot signature boxplot
plot_data<-sign_score%>%group_by(group)%>%summarize(mean_score=mean(sign_score),sd_score=sd(sign_score),se_score=sd(sign_score)/sqrt(length(sign_score)))
View(plot_data)
# 2.3) plot signature boxplot
summary_data<-sign_score%>%group_by(group)%>%summarize(mean_score=mean(sign_score),sd_score=sd(sign_score),se_score=sd(sign_score)/sqrt(length(sign_score)))
View(sign_score)
View(summary_data)
sign_score%>%ggplot(aes(x=group,y=sign_score,color=group))+
geom_point(aes(color =group),size=1,position = position_jitterdodge(dodge.width=0.1,jitter.width = 1))+
geom_errorbar(data=summary_data,aes(x=group,ymin=mean_score-se_score,ymax=mean_score+se_score,color=group))
View(summary_data)
sign_score%>%ggplot(aes(x=group,y=sign_score,color=group))+
geom_point(aes(color =group),size=1,position = position_jitterdodge(dodge.width=0.1,jitter.width = 1))+
geom_errorbar(data=summary_data,
aes(x=group,ymin=mean_score-se_score,ymax=mean_score+se_score,color=group),
position=position_dodge(width=0.2),
width=0.2)
sign_score%>%ggplot(aes(x=group,y=sign_score,color=group))+
geom_point(aes(color =group),size=1,position = position_jitterdodge(dodge.width=0.1,jitter.width = 1))+
geom_errorbar(data=summary_data,
aes(x=group,ymin=mean_score-se_score,ymax=mean_score+se_score),
position=position_dodge(width=0.2),
width=0.2)
sign_score%>%ggplot(aes(x=group,y=sign_score,color=group))+
geom_point(aes(color =group),size=1,position = position_jitterdodge(dodge.width=0.1,jitter.width = 1))+
geom_errorbar(data=summary_data,
aes(ymin=mean_score-se_score,ymax=mean_score+se_score),
position=position_dodge(width=0.2),
width=0.2)
sign_score%>%ggplot(aes(x=group,y=sign_score,color=group))+
geom_point(aes(color =group),size=1,position = position_jitterdodge(dodge.width=0.1,jitter.width = 1))+
geom_errorbar(data=summary_data,
aes(x=group,y=mean_score,ymin=mean_score-se_score,ymax=mean_score+se_score),
position=position_dodge(width=0.2),
width=0.2)
sign_score%>%ggplot(aes(x=group,y=sign_score,color=group))+
geom_point(aes(color =group),size=1,position = position_jitterdodge(dodge.width=0.1,jitter.width = 1))+
geom_errorbar(data=summary_data,
aes(x=group,y=mean_score,ymin=mean_score-se_score,ymax=mean_score+se_score,color=group),
position=position_dodge(width=0.2),
width=0.2)+
geom_hline(data=summary_data,aes(yintercept=mean_score,color=group),linetype="dashed")
sign_score%>%ggplot(aes(x=group,y=sign_score,color=group))+
geom_point(aes(color =group),size=1,position = position_jitterdodge(dodge.width=0.1,jitter.width = 1))+
geom_errorbar(data=summary_data,
aes(x=group,y=mean_score,ymin=mean_score-se_score,ymax=mean_score+se_score,color=group),
position=position_dodge(width=0.2),
width=0.2)+
geom_hline(data=summary_data,aes(yintercept=mean_score,color=group),size=1)
sign_score%>%ggplot(aes(x=group,y=sign_score,color=group))+
geom_point(aes(color =group),size=1,position = position_jitterdodge(dodge.width=0.1,jitter.width = 1))+
geom_errorbar(data=summary_data,
aes(x=group,y=mean_score,ymin=mean_score-se_score,ymax=mean_score+se_score,color=group),
position=position_dodge(width=0.2),
width=0.2)+
geom_hline(data=summary_data,aes(yintercept=mean_score,color=group),size=0.5)
sign_score%>%ggplot(aes(x=group,y=sign_score,color=group))+
geom_point(aes(color =group),size=1,position = position_jitterdodge(dodge.width=0.1,jitter.width = 1))+
geom_errorbar(data=summary_data,
aes(x=group,y=mean_score,ymin=mean_score-se_score,ymax=mean_score+se_score,color=group),
position=position_dodge(width=0.2),
width=0.2)+
geom_segment(data = summary_data,
aes(x = min(as.numeric(group)) - 0.2, xend = max(as.numeric(group)) + 0.2,
y = mean_score, yend = mean_score),
color = "black",
size = 1) +
x
sign_score%>%ggplot(aes(x=group,y=sign_score,color=group))+
geom_point(aes(color =group),size=1,position = position_jitterdodge(dodge.width=0.1,jitter.width = 1))+
geom_errorbar(data=summary_data,
aes(x=group,y=mean_score,ymin=mean_score-se_score,ymax=mean_score+se_score,color=group),
position=position_dodge(width=0.2),
width=0.2)+
geom_segment(data = summary_data,
aes(x = min(as.numeric(group)) - 0.2, xend = max(as.numeric(group)) + 0.2,
y = mean_score, yend = mean_score),
color = "black",
size = 1)
sign_score%>%ggplot(aes(x=group,y=sign_score,color=group))+
geom_point(aes(color =group),size=1,position = position_jitterdodge(dodge.width=0.1,jitter.width = 1))+
geom_errorbar(data=summary_data,
aes(x=group,y=mean_score,ymin=mean_score-se_score,ymax=mean_score+se_score,color=group),
position=position_dodge(width=0.2),
position=position_nudge(width=0.2)
width=0.2)
sign_score%>%ggplot(aes(x=group,y=sign_score,color=group))+
geom_point(aes(color =group),size=1,position = position_jitterdodge(dodge.width=0.1,jitter.width = 1))+
geom_errorbar(data=summary_data,
aes(x=group,y=mean_score,ymin=mean_score-se_score,ymax=mean_score+se_score,color=group),
position=position_dodge(width=0.2),
position=position_nudge(width=0.2),
width=0.2)
sign_score%>%ggplot(aes(x=group,y=sign_score,color=group))+
geom_point(aes(color =group),size=1,position = position_jitterdodge(dodge.width=0.1,jitter.width = 1))+
geom_errorbar(data=summary_data,
aes(x=group,y=mean_score,ymin=mean_score-se_score,ymax=mean_score+se_score,color=group),
position=position_dodge(width=0.2),
width=0.2)+
geom_segment(data=summary_data,
aes(x=group,y=mean_score,xend=group,yend=mean_score),
color="black",linetype="solid",size=1
)
group
View(sign_score)
sign_score$group
summary_data
sign_score%>%ggplot(aes(x=group,y=sign_score,color=group))+
geom_point(aes(color =group),size=1,position = position_jitterdodge(dodge.width=0.1,jitter.width = 1))+
geom_errorbar(data=summary_data,
aes(x=group,y=mean_score,ymin=mean_score-se_score,ymax=mean_score+se_score,color=group),
position=position_dodge(width=0.2),
width=0.2)+
geom_segment(data=summary_data,
aes(x=group,y=mean_score,xend=group,yend=mean_score),
position=position_dodge2(width=0.2,padding=0.1),
color="black",linetype="solid",size=1
)
sign_score%>%ggplot(aes(x=group,y=sign_score,color=group))+
geom_point(aes(color =group),size=1,position = position_jitterdodge(dodge.width=0.1,jitter.width = 1))+
geom_errorbar(data=summary_data,
aes(x=group,y=mean_score,ymin=mean_score-se_score,ymax=mean_score+se_score,color=group),
position=position_dodge(width=0.2),
width=0.2)+
geom_segment(data=summary_data,
aes(x=group,xmin = as.numeric(group) - 0.1,xmax = as.numeric(group) + 0.1,y=mean_score,xend=group,yend=mean_score),
position=position_dodge2(width=0.2,padding=0.1),
color="black",linetype="solid",size=1
)
sign_score%>%ggplot(aes(x=group,y=sign_score,color=group))+
geom_point(aes(color =group),size=1,position = position_jitterdodge(dodge.width=0.1,jitter.width = 1))+
geom_errorbar(data=summary_data,
aes(x=group,y=mean_score,ymin=mean_score-se_score,ymax=mean_score+se_score,color=group),
position=position_dodge(width=0.2),
width=0.2)+
geom_segment(data=summary_data,
aes(x=group,y=mean_score,xend=group,yend=mean_score),
position=position_dodge2(width=0.2,padding=0.1),
color="black",linetype="solid",size=1
)
summary_data
View(sample_info)
sign_score%>%ggplot(aes(x=group,y=sign_score,color=group))+
geom_point(aes(color =group),size=1,position = position_jitterdodge(dodge.width=0.1,jitter.width = 1))+
geom_errorbar(data=summary_data,
aes(x=group,y=mean_score,ymin=mean_score-se_score,ymax=mean_score+se_score,color=group),
position=position_dodge(width=0.2),
width=0.2)+
geom_crossbar(summary_data,aes(x=group,y=mean_score),width=0.2)
sign_score%>%ggplot(aes(x=group,y=sign_score,color=group))+
geom_point(aes(color =group),size=1,position = position_jitterdodge(dodge.width=0.1,jitter.width = 1))+
geom_errorbar(data=summary_data,
aes(x=group,y=mean_score,ymin=mean_score-se_score,ymax=mean_score+se_score,color=group),
position=position_dodge(width=0.2),
width=0.2)+
geom_crossbar(summary_data,aes(x=group,y=mean_score))
sign_score%>%ggplot(aes(x=group,y=sign_score,color=group))+
geom_point(aes(color =group),size=1,position = position_jitterdodge(dodge.width=0.1,jitter.width = 1))+
geom_errorbar(data=summary_data,
aes(x=group,y=mean_score,ymin=mean_score-se_score,ymax=mean_score+se_score,color=group),
position=position_dodge(width=0.2),
width=0.2)+
geom_crossbar(aes(x=group,y=mean_score))
sign_score%>%ggplot(aes(x=group,y=sign_score,color=group))+
geom_point(aes(color =group),size=1,position = position_jitterdodge(dodge.width=0.1,jitter.width = 1))+
geom_errorbar(data=summary_data,
aes(x=group,y=mean_score,ymin=mean_score-se_score,ymax=mean_score+se_score,color=group),
position=position_dodge(width=0.2),
width=0.2)+
geom_crossbar(data=summary_data,aes(x=group,y=mean_score))
sign_score%>%ggplot(aes(x=group,y=sign_score,color=group))+
geom_point(aes(color =group),size=1,position = position_jitterdodge(dodge.width=0.1,jitter.width = 1))+
geom_errorbar(data=summary_data,
aes(x=group,y=mean_score,ymin=mean_score-se_score,ymax=mean_score+se_score,color=group),
position=position_dodge(width=0.2),
width=0.2)+
geom_crossbar(data=summary_data,aes(x=group,y=mean_score,ymin=mean_score,ymax=mean_score),width=0.2)
sign_score%>%ggplot(aes(x=group,y=sign_score,color=group))+
geom_point(aes(color =group),size=1,position = position_jitterdodge(dodge.width=0.1,jitter.width = 1))+
geom_errorbar(data=summary_data,
aes(x=group,y=mean_score,ymin=mean_score-se_score,ymax=mean_score+se_score,color=group),
position=position_dodge(width=0.1),
width=0.2)+
geom_crossbar(data=summary_data,aes(x=group,y=mean_score,ymin=mean_score,ymax=mean_score),width=0.3)
View(sample_info)
